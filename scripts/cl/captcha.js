(function(){const a={scriptSrc:"https://www.google.com/recaptcha/api.js",render:function(a,b,c,d){window&&window.grecaptcha&&window.grecaptcha.ready(async function(){if(!b.has(a)){const e=document.querySelector(`[data-captcha-widget-id='${a}']`);try{const f=window.grecaptcha.render(e,{sitekey:d,callback:function(b){c.set(a,b),e&&e.dataset&&"invisible"===e.dataset.size&&"cms_captcha"===a&&document.dispatchEvent(new CustomEvent("invisible_recaptcha_was_solved"))},"expired-callback":function(){c.delete(a)},"error-callback":function(){c.delete(a)}});b.set(a,f)}catch(a){if(a.message&&!a.message.includes("reCAPTCHA has already been rendered in this element"))throw a}}})},reset:function(a){window&&window.grecaptcha&&window.grecaptcha.hasOwnProperty("reset")&&window.grecaptcha.reset(a)},execute:function(a){window&&window.grecaptcha&&window.grecaptcha.hasOwnProperty("execute")&&window.grecaptcha.execute(a)}},b={scriptSrc:"https://cdn.jsdelivr.net/npm/friendly-challenge/widget.min.js",render:function(a,b,c,d){const e=document.querySelector(`[data-captcha-widget-id='${a}']`);if(e){e.classList.add("bluex-friendly-captcha"),window[`friendly-${a}`]=function(b){c.set(a,b)};const f=setInterval(function(){"undefined"!=typeof window.friendlyChallenge&&(clearInterval(f),!b.has(a)&&b.set(a,new window.friendlyChallenge.WidgetInstance(e,{doneCallback:window[`friendly-${a}`],sitekey:d})))},200)}},reset:function(a){a&&"function"==typeof a.reset&&a.reset()},execute:function(){console.log("Friendly challenge do not support execute method.")}};window.captcha=function(){function c(a,b,c="google_recaptcha"){return b?"friendly_challenge"!==c&&"google_recaptcha"!==c?void console.error(`Invalid captchaType provided: ${c}`):void(k=j[c],g.has(a)?(e(a),i.delete(a),k&&k.render(a,i,h,b)):(g.set(a,!0),d(k.scriptSrc,function(){k.render(a,i,h,b)}))):void console.error("siteKey is not set!")}function d(a,b){const c=document.createElement("script");c.src=a,c.async=!0,c.onload=b,document.body.appendChild(c)}function e(a){k&&k.hasOwnProperty("reset")&&(k.reset(i.get(a)),h.delete(a))}function f(a){k&&k.hasOwnProperty("execute")&&k.execute(i.get(a))}const g=new Map,h=new Map,i=new Map,j={google_recaptcha:a,friendly_challenge:b};let k;return{init:c,getToken:function(a){return h.get(a)},reset:e,execute:f}}()})();